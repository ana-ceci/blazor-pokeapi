@page "/"
@using System.Net.Http.Json
@using BlazorPokeApi.models
@inject HttpClient Http

<PageTitle>Pokémon API</PageTitle>

<h1>Consulta Pokémon</h1>

<div class="form-group">
    <label for="pokemonInput">Digite o nome do Pokémon:</label>
    <input type="text" id="pokemonInput" class="form-control"
           placeholder="Exemplo: pikachu, bulbasaur..."
           @bind="pokemonName" />
</div>

<button class="btn btn-primary mt-2" @onclick="ConsultarPokemon">
    Consultar API
</button>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}

@if (pokemon != null)
{
    <div class="card mt-4 p-3" style="width: 22rem;">
        <img src="@pokemon.sprites?.front_default?.Replace("http:", "https:")"
             alt="@pokemon.name" class="card-img-top" />
        <div class="card-body">
            <h4 class="card-title text-capitalize">@pokemon.name</h4>
            <p><strong>ID:</strong> @pokemon.id</p>
            <p><strong>Altura:</strong> @pokemon.height</p>
            <p><strong>Peso:</strong> @pokemon.weight</p>
        </div>
    </div>
}

@code {
    private string pokemonName;
    private Pokemon pokemon;
    private string errorMessage;

    private async Task ConsultarPokemon()
    {
        errorMessage = string.Empty;
        pokemon = null;

        if (string.IsNullOrWhiteSpace(pokemonName))
        {
            errorMessage = "Por favor, insira o nome de um Pokémon.";
            return;
        }

        try
        {
            string url = $"https://pokeapi.co/api/v2/pokemon/{pokemonName.ToLower()}";
            pokemon = await Http.GetFromJsonAsync<Pokemon>(url);

            if (pokemon == null)
            {
                errorMessage = "Pokémon não encontrado.";
            }
        }
        catch (HttpRequestException ex)
        {
            errorMessage = $"Erro de conexão com a API: {ex.Message}";
        }
        catch (System.Text.Json.JsonException ex)
        {
            errorMessage = $"Erro ao processar os dados da API: {ex.Message}";
        }
        catch (Exception ex)
        {
            errorMessage = $"Erro inesperado: {ex.Message}";
        }
    }
}
